#!/bin/bash

# set -e

# keep track of the last executed command
trap 'last_command=$current_command; current_command=$BASH_COMMAND' DEBUG
# echo an error message before exiting
trap 'echo "\"${last_command}\" command filed with exit code $?."' EXIT

# direct all logs to after-install.log
exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>/home/ubuntu/BrandSearch-logs/after-install.log 2>&1

AC_DIR="/home/ubuntu/BrandSearch"
AC_ENV_DIR="/home/ubuntu/BrandSearch/venv"

cd ${AC_DIR}

cp ${AC_ENV_DIR}/vars/.env ${AC_DIR}/

# changing ownership of folder
sudo /bin/bash -c "chown -R ubuntu:www-data ${AC_DIR}"

# change file permissions to -rw-r--r--
sudo /bin/bash -c "find ${AC_DIR} -type f -exec chmod 644 {} \;"

# change directory permissions to drwxr-xr-x
sudo /bin/bash -c "find ${AC_DIR} -type d -exec chmod 755 {} \;"

# activate virtual env
source ${AC_ENV_DIR}/bin/activate

# install dependencies
${AC_ENV_DIR}/bin/pip install -r ${AC_DIR}/requirements/development.txt

# run migrations
# ${AC_ENV_DIR}/bin/python ${AC_DIR}/manage.py makemigrations --noinput
${AC_ENV_DIR}/bin/python ${AC_DIR}/manage.py migrate --noinput

# collect static content
${AC_ENV_DIR}/bin/python ${AC_DIR}/manage.py collectstatic --noinput

## collect crontab
#${AC_ENV_DIR}/bin/python ${AC_DIR}/manage.py crontab add


# add cronjobs
# ${AC_ENV_DIR}/bin/python ${AC_DIR}/manage.py crontab add
# ${AC_ENV_DIR}/bin/python ${AC_DIR}/manage.py crontab add --noinput
